version: "2.2"

x-docker-data: &build_osctrl
  context: .
  dockerfile: Dockerfile-osctrl-prod
  args:
    OSCTRL_VERSION: ${OSCTRL_VERSION}
    OSQUERY_VERSION: ${OSQUERY_VERSION}
    POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
    POSTGRES_DB_USERNAME: ${POSTGRES_DB_USERNAME}
    POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
    JWT_SECRET: ${JWT_SECRET}

services:
  ######################################### NGINX #########################################
  osctrl-nginx:
    container_name: 'nginx-osctrl'
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    networks:
      - default
      - osctrl-backend
    ports:
      - 8000:80
      - 8443:443
    depends_on:
      - osctrl-tls
      - osctrl-admin
      - osctrl-api

  ######################################### osctrl-tls #########################################
  osctrl-tls:
    image: jmpsec/osctrl-tls:osctrl-admin-urfave-cli
    command: sh -c "chmod 755 /opt/osctrl/bin/osctrl-tls && /opt/osctrl/bin/osctrl-tls"
    container_name: 'osctrl-tls'
    restart: unless-stopped
    user: "0:0"
    environment:
      #### TLS settings ####
      - TLS_SERVER=false
      - SERVICE_LISTENER=0.0.0.0
      - SERVICE_PORT=9000
      - SERVICE_HOST=0.0.0.0
      - SERVICE_AUTH=none
      - SERVICE_LOGGING=db
      #### Database settings ####
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB_NAME}
      - DB_USER=${POSTGRES_DB_USERNAME}
      - DB_PASS=${POSTGRES_DB_PASSWORD}
    networks:
      - osctrl-backend
    depends_on:
      - postgres

  ######################################### osctrl-admin #########################################
  osctrl-admin:
    container_name: 'osctrl-admin'
    restart: unless-stopped
    image: osctrl-admin:${OSCTRL_VERSION}
    build:
      <<: *build_osctrl
      target: osctrl-admin
    networks:
      - default
      - osctrl-backend
    ports:
      - 9001:9001
    depends_on:
      - postgres

  ######################################### osctrl-api #########################################
  osctrl-api:
    container_name: 'osctrl-api'
    restart: unless-stopped
    image: osctrl-api:${OSCTRL_VERSION}
    build:
      <<: *build_osctrl
      target: osctrl-api
    networks:
      - osctrl-backend
    depends_on:
      - postgres

  ######################################### PostgreSQL #########################################
  postgres:
    container_name: 'osctrl-postgres'
    restart: unless-stopped
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    networks:
      - osctrl-backend
    volumes:
      - postgres-db:/var/lib/postgresql/data

  ######################################### osctrl-cli #########################################
  osctrl-cli:
    container_name: 'osctrl-cli'
    restart: unless-stopped
    image: osctrl-cli:${OSCTRL_VERSION}
    build:
      <<: *build_osctrl
      target: osctrl-cli
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      - osctrl-backend
    depends_on:
      - postgres

  ######################################### osquery #########################################
  ubuntu-osquery:
    container_name: 'osctrl-ubuntu-osquery'
    restart: unless-stopped
    image: osctrl-ubuntu-osquery:${OSQUERY_VERSION}
    build:
      <<: *build_osctrl
      target: osctrl-ubuntu-osquery
    networks:
      - osctrl-backend
    depends_on:
      - osctrl-tls

networks:
  osctrl-backend:
  osquery-backend:

volumes:
  postgres-db: