######################################## osctrl-base ########################################
FROM golang:latest AS osctrl-base
ARG OSCTRL_VERSION

ENV GO111MODULE=on

# Install software
RUN apt-get update -y && apt-get install zip curl -y

# Build based on a stable version
#RUN cd /tmp && \
#    curl -L https://github.com/jmpsec/osctrl/archive/refs/tags/${OSCTRL_VERSION}.zip --output osctrl_${OSCTRL_VERSION}.zip && \
#    mkdir -p /tmp/osctrl && \
#    unzip osctrl_${OSCTRL_VERSION}.zip -d /go/src && \
#    mv /go/src/osctrl-${OSCTRL_VERSION} /go/src/osctrl

ADD . /go/src/osctrl
WORKDIR /go/src/osctrl

########## Compile osctrl bins ##########
RUN go build -o bin/osctrl-tls tls/*.go
RUN go build -o bin/osctrl-api api/*.go
RUN go build -o bin/osctrl-admin admin/*.go
RUN go build -o bin/osctrl-cli cli/*.go

######################################## osctrl-tls ########################################
FROM ubuntu:20.04 AS osctrl-tls

ARG POSTGRES_DB_NAME
ARG POSTGRES_DB_USERNAME
ARG POSTGRES_DB_PASSWORD
ARG JWT_SECRET

### Create user ###
RUN useradd -ms /bin/bash osctrl-tls

### Copy osctrl-tls bin and configs ###
RUN mkdir -p /opt/osctrl/bin
RUN mkdir -p /opt/osctrl/scripts
RUN mkdir -p /opt/osctrl/config
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-tls /opt/osctrl/bin/osctrl-tls
COPY --from=osctrl-base /go/src/osctrl/tls/scripts/ /opt/osctrl/scripts
COPY deploy/docker/conf/osctrl/tls/tls.json /opt/osctrl/config/tls.json
COPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json

USER osctrl-tls
EXPOSE 9000
WORKDIR /opt/osctrl

ENTRYPOINT [ "/opt/osctrl/bin/osctrl-tls" ]

######################################## osctrl-api ########################################
FROM ubuntu:20.04 AS osctrl-api

ARG POSTGRES_DB_NAME
ARG POSTGRES_DB_USERNAME
ARG POSTGRES_DB_PASSWORD
ARG JWT_SECRET

### Create user ###
RUN useradd -ms /bin/bash osctrl-api

### Copy osctrl-api bin and configs ###
RUN mkdir -p /opt/osctrl/bin
RUN mkdir -p /opt/osctrl/config
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-api /opt/osctrl/bin/osctrl-api

COPY deploy/docker/conf/osctrl/api/api.json /opt/osctrl/config/api.json
COPY deploy/docker/conf/osctrl/jwt.json /opt/osctrl/config/jwt.json
RUN sed -i "s#{{ JWT_SECRET }}#${JWT_SECRET}#g" /opt/osctrl/config/jwt.json

COPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json
RUN cat /opt/osctrl/config/db.json

USER osctrl-api
EXPOSE 9002
WORKDIR /opt/osctrl

ENTRYPOINT [ "/opt/osctrl/bin/osctrl-api" ]

######################################## osctrl-admin ########################################
FROM ubuntu:20.04 AS osctrl-admin
ARG OSQUERY_VERSION
ARG POSTGRES_DB_NAME
ARG POSTGRES_DB_USERNAME
ARG POSTGRES_DB_PASSWORD
ARG JWT_SECRET
ARG ENV

### Create user ###
RUN useradd -ms /bin/bash osctrl-admin

### Copy osctrl-admin bin and configs ###
RUN mkdir -p /opt/osctrl/bin
RUN mkdir -p /opt/osctrl/configs
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-admin /opt/osctrl/bin/osctrl-admin
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli

COPY deploy/docker/conf/osctrl/admin/admin.json /opt/osctrl/config/admin.json
COPY deploy/docker/conf/osctrl/jwt.json /opt/osctrl/config/jwt.json
RUN sed -i "s#{{ JWT_SECRET }}#${JWT_SECRET}#g" /opt/osctrl/config/jwt.json

COPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json
RUN chown osctrl-admin:osctrl-admin -R /opt/osctrl/config

### Copy osctrl-admin web templates ###
COPY --from=osctrl-base /go/src/osctrl/admin/templates/ /opt/osctrl/tmpl_admin
COPY --from=osctrl-base /go/src/osctrl/admin/templates/components/page-head-online.html /opt/osctrl/tmpl_admin/components/page-head.html
COPY --from=osctrl-base /go/src/osctrl/admin/templates/components/page-js-online.html /opt/osctrl/tmpl_admin/components/page-js.html
COPY --from=osctrl-base /go/src/osctrl/admin/static/ /opt/osctrl/static
COPY --from=osctrl-base /go/src/osctrl/deploy/osquery/data/${OSQUERY_VERSION}.json /opt/osctrl/data/${OSQUERY_VERSION}.json

RUN mkdir -p /opt/osctrl/carved_files
RUN chown osctrl-admin:osctrl-admin -R /opt/osctrl/carved_files

USER osctrl-admin
EXPOSE 9001
WORKDIR /opt/osctrl
ENTRYPOINT [ "/opt/osctrl/bin/osctrl-admin" ]

######################################## osctrl-cli ########################################
FROM ubuntu:20.04 AS osctrl-cli
ARG POSTGRES_DB_NAME
ARG POSTGRES_DB_USERNAME
ARG POSTGRES_DB_PASSWORD

### Copy osctrl-admin bin and configs ###
RUN mkdir -p /opt/osctrl/
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli
COPY deploy/docker/conf/osquery/wait-cli.sh /opt/osctrl/bin/wait-cli.sh

COPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json
RUN ln -s /opt/osctrl/bin/osctrl-cli /usr/local/bin/osctrl-cli

COPY deploy/docker/conf/tls/osctrl.crt /opt/osctrl/config/osctrl.crt

ENTRYPOINT [ "/opt/osctrl/bin/wait-cli.sh" ]

######################################## Ubuntu 20.04 node ########################################
FROM ubuntu:20.04 as osctrl-ubuntu-osquery
ARG OSCTRL_VERSION
ARG OSQUERY_VERSION
ARG POSTGRES_DB_NAME
ARG POSTGRES_DB_USERNAME
ARG POSTGRES_DB_PASSWORD

### Copy osctrl-cli bin and config ###
RUN mkdir -p /opt/osctrl/
COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli
COPY deploy/docker/conf/osquery/wait.sh /opt/osctrl/bin/wait.sh
RUN chmod +x /opt/osctrl/bin/wait.sh

COPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json

### Install osquery ###
RUN apt update && apt install -y curl
RUN curl "https://osquery-packages.s3.amazonaws.com/deb/osquery_${OSQUERY_VERSION}-1.linux_$(dpkg --print-architecture).deb" -o "/tmp/osquery.deb"
RUN dpkg -i "/tmp/osquery.deb"
COPY deploy/docker/conf/tls/osctrl.crt /etc/osquery/osctrl.crt

ENTRYPOINT [ "/opt/osctrl/bin/wait.sh" ]

######################################## Debian 9 node ########################################
# FROM debian:9 as osctrl-debian-osquery
# ARG OSCTRL_VERSION
# ARG OSQUERY_VERSION
# ARG POSTGRES_DB_NAME
# ARG POSTGRES_DB_USERNAME
# ARG POSTGRES_DB_PASSWORD

# ### Copy osctrl-cli bin and config ###
# RUN mkdir -p /opt/osctrl-cli/
# COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli
# COPY deploy/docker/conf/osquery/wait.sh /opt/osctrl/bin/wait.sh
# RUN chmod +x /opt/osctrl/bin/wait.sh

# COPY deploy/docker/conf/osctrl/db.json /opt/osctrl-cli/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl-cli/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl-cli/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl-cli/config/db.json

# ### Install osquery ###
# RUN apt update && apt install -y curl
# RUN curl "https://osquery-packages.s3.amazonaws.com/deb/osquery_${OSQUERY_VERSION}-1.linux_$(dpkg --print-architecture).deb" -o "/tmp/osquery.deb"
# RUN dpkg -i "/tmp/osquery.deb"
# COPY deploy/docker/conf/tls/*.crt /etc/osquery/osctrl.crt

# ENTRYPOINT [ "/opt/osctrl/bin/wait.sh" ]

######################################## CentOS 7 node ########################################
# FROM centos:7 as osctrl-centos-osquery
# ARG OSCTRL_VERSION
# ARG OSQUERY_VERSION
# ARG POSTGRES_DB_NAME
# ARG POSTGRES_DB_USERNAME
# ARG POSTGRES_DB_PASSWORD

# ### Copy osctrl-cli bin and config ###
# RUN mkdir -p /opt/osctrl-cli/
# COPY --from=osctrl-base /go/src/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli
# COPY deploy/docker/conf/osquery/wait.sh /opt/osctrl/bin/wait.sh
# RUN chmod +x /opt/osctrl/bin/wait.sh

# COPY conf/osctrl/db.json /opt/osctrl-cli/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g" /opt/osctrl/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g" /opt/osctrl/config/db.json
# RUN sed -i "s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g" /opt/osctrl/config/db.json

# ### Install osquery ###
# RUN apt update && apt install -y curl
# RUN curl "https://osquery-packages.s3.amazonaws.com/rpm/osquery-${OSQUERY_VERSION}-1.linux.x86_64.rpm" -o "/tmp/osquery.rpm"
# RUN dpkg -i "/tmp/osquery.rpm"
# COPY deploy/docker/conf/tls/*.crt /etc/osquery/osctrl.crt

# ENTRYPOINT [ "/opt/osctrl/bin/wait.sh" ]
